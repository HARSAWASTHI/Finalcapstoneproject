Branch indexing
Connecting to https://api.github.com using HARSAWASTHI/******
Obtained Jenkinsfile from 875a724708d5fd64904c519843ed174c27db41ba
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/FINALCAPSTONEPROJECT_dev
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
The recommended git tool is: NONE
using credential GITHUB
Cloning the remote Git repository
Cloning with configured refspecs honoured and without tags
Cloning repository https://github.com/HARSAWASTHI/Finalcapstoneproject.git
 > git init /var/lib/jenkins/workspace/FINALCAPSTONEPROJECT_dev # timeout=10
Fetching upstream changes from https://github.com/HARSAWASTHI/Finalcapstoneproject.git
 > git --version # timeout=10
 > git --version # 'git version 2.34.1'
using GIT_ASKPASS to set credentials 
 > git fetch --no-tags --force --progress -- https://github.com/HARSAWASTHI/Finalcapstoneproject.git +refs/heads/dev:refs/remotes/origin/dev # timeout=10
 > git config remote.origin.url https://github.com/HARSAWASTHI/Finalcapstoneproject.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/dev:refs/remotes/origin/dev # timeout=10
Avoid second fetch
Checking out Revision 875a724708d5fd64904c519843ed174c27db41ba (dev)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f 875a724708d5fd64904c519843ed174c27db41ba # timeout=10
Commit message: "First push"
First time build. Skipping changelog.
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (for dev Branch)
[Pipeline] script
[Pipeline] {
[Pipeline] sh
+ docker build -t harsawasthi/dev:1 .
#0 building with "default" instance using docker driver

#1 [internal] load build definition from Dockerfile
#1 transferring dockerfile: 29B 0.1s
#1 transferring dockerfile: 119B 0.2s done
#1 DONE 0.3s

#2 [internal] load metadata for docker.io/library/nginx:latest
#2 DONE 0.0s

#3 [internal] load .dockerignore
#3 transferring context:
#3 transferring context: 2B 0.0s done
#3 DONE 0.1s

#4 [internal] load build context
#4 DONE 0.0s

#5 [1/3] FROM docker.io/library/nginx:latest
#5 DONE 0.5s

#4 [internal] load build context
#4 transferring context: 3.53MB 0.7s done
#4 DONE 1.4s

#6 [2/3] WORKDIR /usr/share/nginx/html
#6 CACHED

#7 [3/3] COPY . /usr/share/nginx/html
#7 DONE 50.9s

#8 exporting to image
#8 exporting layers
#8 exporting layers 11.5s done
#8 writing image sha256:6965f1d0479489d866d38f80a32d91bb5046665c7ad4ef093bec17454c6a8d01
#8 writing image sha256:6965f1d0479489d866d38f80a32d91bb5046665c7ad4ef093bec17454c6a8d01 0.0s done
#8 naming to docker.io/harsawasthi/dev:1
#8 naming to docker.io/harsawasthi/dev:1 0.2s done
#8 DONE 14.0s
[Pipeline] withCredentials
Masking supported pattern matches of $DOCKER_PASSWORD
[Pipeline] {
[Pipeline] sh
+ docker login -u harsawasthi --password-stdin docker.io
+ echo ****
WARNING! Your password will be stored unencrypted in /var/lib/jenkins/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credential-stores

Login Succeeded
[Pipeline] sh
+ docker push harsawasthi/dev:1
The push refers to repository [docker.io/harsawasthi/dev]
222a498286fe: Preparing
5f70bf18a086: Preparing
5f0272c6e96d: Preparing
f4f00eaedec7: Preparing
55e54df86207: Preparing
ec1a2ca4ac87: Preparing
8b87c0c66524: Preparing
72db5db515fd: Preparing
9853575bc4f9: Preparing
ec1a2ca4ac87: Waiting
72db5db515fd: Waiting
9853575bc4f9: Waiting
8b87c0c66524: Waiting
55e54df86207: Layer already exists
5f70bf18a086: Layer already exists
f4f00eaedec7: Layer already exists
5f0272c6e96d: Layer already exists
ec1a2ca4ac87: Layer already exists
9853575bc4f9: Layer already exists
72db5db515fd: Layer already exists
8b87c0c66524: Layer already exists
222a498286fe: Pushed
1: digest: sha256:27d2981b5e058a37e25fed77fce32381980e4cb1821b6099c85e0d8ed9495489 size: 2195
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // script
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (for master Branch)
Stage "for master Branch" skipped due to when conditional
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (for merge request)
Stage "for merge request" skipped due to when conditional
[Pipeline] getContext
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline

Could not update commit status, please check if your scan credentials belong to a member of the organization or a collaborator of the repository and repo:status scope is selected


GitHub has been notified of this commitâ€™s build result

Finished: SUCCESS
